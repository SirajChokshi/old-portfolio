{"version":3,"sources":["webpack:///./src/components/case.js","webpack:///./src/pages/work/music.js"],"names":["Case","children","styleTemp","title","year","topic","scope","tools","skills","className","style","id","map","skill","tool","Images","index","data","alt","fluid","planning","childImageSharp","wireframe","final","width","mobile","imgStyle","marginTop","backgroundColor","backgroundImage","MusicPage","src","marginBottom"],"mappings":"8FAAA,yBA4DeA,IAlDF,SAAC,GAAuE,IAArEC,EAAoE,EAApEA,SAAUC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAErE,OACE,oCACI,6BAASC,UAAU,6BAA6BC,MAAOR,IACnD,yBAAKO,UAAU,eACX,4BAAKN,GACL,4BAAKC,EAAL,MAAqBC,IAEzB,6BAASI,UAAU,sBAAsBC,MAAOR,GAC5C,yBAAKO,UAAU,QACX,4BAAKN,GACL,4BAAKC,EAAL,MAAqBC,KAGjC,6BAASI,UAAU,MAAME,GAAG,cACxB,6BAASF,UAAU,gBACf,qCACA,4BACI,4BACKH,KAIb,6BAASG,UAAU,gBACf,sCACA,4BACKD,EAAOI,KAAI,SAACC,GAAD,OACR,4BAAKA,QAIjB,6BAASJ,UAAU,gBACf,qCACA,4BACKF,EAAMK,KAAI,SAACE,GAAD,OACP,4BAAKA,SAKpBb,K,u7NCtCHc,EAAS,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MACPC,GADuB,EAATC,IACV,QAiCV,OAAOF,GACH,KAAK,EACD,OAAO,kBAAC,IAAD,CAAKG,MAAOF,EAAKG,SAASC,gBAAgBF,QAErD,KAAK,EACD,OAAO,kBAAC,IAAD,CAAKA,MAAOF,EAAKK,UAAUD,gBAAgBF,QAEtD,KAAK,EACD,OAAO,kBAAC,IAAD,CAAKA,MAAOF,EAAKM,MAAMF,gBAAgBF,MAAOT,MAAO,CAACc,MAAO,UAExE,KAAK,EACD,OAAO,kBAAC,IAAD,CAAKL,MAAOF,EAAKQ,OAAOJ,gBAAgBF,MAAOO,SAAU,CAACC,UAAW,KAEhF,QACI,OAAO,kBAAC,IAAD,CAAKR,MAAOF,EAAKG,SAASC,gBAAgBF,UAKvDjB,EAAY,CACd0B,gBAAiB,UACjBC,gBAAiB,4BAgENC,UA7DG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3B,MAAM,uBACX,kBAAC,IAAD,CACID,UAAWA,EACXC,MAAM,qBACNC,KAAK,OACLC,MAAM,eACNC,MAAM,mFACNE,OAAQ,CAAC,yBAA0B,wBAAyB,cAAe,iBAC3ED,MAAO,CAAC,QAAS,WAAY,cAE7B,6BAASE,UAAU,QACf,4BAAI,qCAAJ,aACA,0dAMA,4BAAI,qCAAJ,WACA,qpBAQA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,kBAACM,EAAD,CAAQC,MAAO,EAAGE,IAAI,8BAE1B,yBAAMT,UAAU,eACZ,kBAACM,EAAD,CAAQC,MAAO,EAAGE,IAAI,yBAG9B,4BAAI,qCAAJ,WACA,wlBAOA,yBAAKT,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAACM,EAAD,CAAQC,MAAO,EAAGE,IAAI,2BAE1B,yBAAKT,UAAU,mBACX,yBAAKsB,IAAI,kBAAkBb,IAAI,2BAA2BR,MAAO,CAACsB,aAAc,OAGxF,yBAAKvB,UAAU,iBAAiBC,MAAO,CAACsB,aAAc,QAClD,kBAACjB,EAAD,CAAQC,MAAO,EAAGE,IAAI","file":"component---src-pages-work-music-js-1bca76b5b4fc27f1a48e.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Case = ({ children, styleTemp, title, year, topic, scope, tools, skills }) => {\n\n  return (\n    <>\n        <section className=\"project-header-card mobile\" style={styleTemp} />\n            <div className=\"info mobile\">\n                <h2>{title}</h2>\n                <h3>{year} &middot; {topic}</h3>\n            </div>\n            <section className=\"project-header-card\" style={styleTemp}>\n                <div className=\"info\">\n                    <h2>{title}</h2>\n                    <h3>{year} &middot; {topic}</h3>\n                </div>\n        </section>\n        <article className=\"row\" id=\"sub-header\">\n            <section className=\"columns four\">\n                <h3>Scope</h3>\n                <ul>\n                    <li>\n                        {scope}\n                    </li>\n                </ul>\n            </section>\n            <section className=\"columns four\">\n                <h3>Skills</h3>\n                <ul>\n                    {skills.map((skill) => (\n                        <li>{skill}</li>\n                    ))}\n                </ul>\n            </section>\n            <section className=\"columns four\">\n                <h3>Tools</h3>\n                <ul>\n                    {tools.map((tool) => (\n                        <li>{tool}</li>\n                    ))}\n                </ul>\n            </section>\n        </article>\n        {children}\n    </>\n  )\n}\n\nCase.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Case\n","import React from \"react\"\n\nimport '../../styles/skeleton.css';\nimport '../../styles/main.css';\nimport '../../styles/about.css';\nimport '../../styles/case.css';\n\nimport Layout from \"../../components/layout\";\nimport Case from \"../../components/case\";\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport SEO from \"../../components/seo\";\n\nconst Images = ({index, alt}) => {\n    const data = useStaticQuery(graphql`\n      query {\n        planning: file(relativePath: { eq: \"work/music/planning.png\" }) {\n            childImageSharp {\n            fluid(maxWidth: 900) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        wireframe: file(relativePath: { eq: \"work/music/wireframe.png\" }) {\n            childImageSharp {\n            fluid(maxWidth: 900) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        final: file(relativePath: { eq: \"work/music/final.png\" }) {\n            childImageSharp {\n            fluid(maxWidth: 900) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"work/music/mobile.png\" }) {\n            childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `)\n    \n    switch(index) {\n        case 0:\n            return <Img fluid={data.planning.childImageSharp.fluid} />;\n            break;\n        case 1:\n            return <Img fluid={data.wireframe.childImageSharp.fluid} />;\n            break;\n        case 2:\n            return <Img fluid={data.final.childImageSharp.fluid} style={{width: \"100%\"}} />;\n            break;\n        case 4:\n            return <Img fluid={data.mobile.childImageSharp.fluid} imgStyle={{marginTop: 0}} />;\n            break;\n        default:\n            return <Img fluid={data.planning.childImageSharp.fluid} />;\n            break;\n    }\n  }\n\nconst styleTemp = {\n    backgroundColor: \"#44C1BB\",\n    backgroundImage: \"url(\\\"/images/music.png\\\")\",\n};\n\nconst MusicPage = () => (\n  <Layout>\n    <SEO title=\"Music Streaming UI\" />\n    <Case \n        styleTemp={styleTemp}\n        title=\"Music Streaming UI\"\n        year=\"2017\"\n        topic=\"UI/UX Design\"\n        scope=\"Design a human-centered user interface for a music streaming mobile application.\"\n        skills={[\"User Experience Design\", \"User Interface Design\", \"Prototyping\", \"Visual Design\"]}\n        tools={[\"Figma\", \"Balsamiq\", \"Photoshop\"]}\n    >\n        <article className=\"case\">\n            <h2><span>01.</span> Planning</h2>\n            <p>I started out by looking through several popular music playing services (i.e; Spotify,\n                Deezer and Apple Music). I then noted what I liked or disliked about said services and\n                created guidelines towards what was necessary in the UI of music streaming applications.\n                I aimed to make my interface intuitive, easy to use and comfortable to operate. My first\n                plans were sketched with pen on paper and I then moved to Balsamiq for some low-fi mockups.\n            </p>\n            <h2><span>02.</span> Design</h2>\n            <p>In Balsamiq I consolidated my many drafts into one uniform design system. When creating low-fi\n                mockups and wireframes I put the majority of my focus on the layout of elements as well as their\n                size. After being satisfied by the mockups I had created in Balsamiq I started to plan out the\n                final design. I used the low-fi mockups as references to create a fully featured interface in\n                Figma. At this stage, after creating some icons in Illustrator, I decided to use a dark theme\n                as the focus for music streaming is the music and not the visuals. I also created an accent\n                gradient in a teal color to compliment the interface's dark UI.\n            </p>\n            <div className=\"row\">\n                <div className=\"six columns\">\n                    <Images index={0} alt=\"Music UI Paper Prototype\" />\n                    </div>\n                <div  className=\"six columns\">\n                    <Images index={1} alt=\"Music UI Wireframe\" />\n                </div>\n            </div>\n            <h2><span>03.</span> Result</h2>\n            <p>Once I had exported my final screens from Figma I created a Photoshop mockup with a basic\n                interaction. The design features a dark interface with a teal gradient accent and offers\n                a search feature, menu, music player and database. Design choices were made in order\n                to create a convenient user experience such as a right aligned play button on album\n                and artist pages for the majority of users who are right-handed. Users can\n                follow artists, click expanded menus on songs, see an artist's most played songs,\n                view their time in a song with the bottom progress bar and more.</p>\n            <div className=\"row\">\n                <div className=\"one-half column\" >\n                    <Images index={2} alt=\"Music UI Final Design\" />\n                </div>\n                <div className=\"one-half column\" >\n                    <img src=\"/images/vid.gif\" alt=\"Music UI Final Animation\" style={{marginBottom: 0}} />\n                </div>\n            </div>\n            <div className=\"twelve columns\" style={{marginBottom: \"4em\"}}>\n                <Images index={4} alt=\"Music UI on Mobile Mockups\" />\n            </div>\n        </article>\n    </Case>\n  </Layout>\n)\n\nexport default MusicPage\n"],"sourceRoot":""}